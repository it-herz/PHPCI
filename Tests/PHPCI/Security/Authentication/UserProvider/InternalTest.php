<?php

/**
 * PHPCI - Continuous Integration for PHP
 *
 * @copyright    Copyright 2014, Block 8 Limited.
 * @license      https://github.com/Block8/PHPCI/blob/master/LICENSE.md
 * @link         https://www.phptesting.org/
 */

namespace PHPCI\Security\Authentication\UserProvider\Tests;

use PHPCI\Security\Authentication\UserProvider\Internal;
use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-08 at 18:26:51.
 */
class InternalTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Internal
     */
    protected $provider;

    protected function setUp()
    {
        $this->provider = new Internal("internal");
    }

    /**
     * @covers PHPCI\Security\Authentication\UserProvider\Internal::verifyPassword
     */
    public function testVerifyPassword()
    {
        $user = new \PHPCI\Model\User;
        $password = 'bla';
        $user->setHash(password_hash($password, PASSWORD_DEFAULT));

        $this->assertTrue($this->provider->verifyPassword($user, $password));
    }

    /**
     * @covers PHPCI\Security\Authentication\UserProvider\Internal::verifyPassword
     */
    public function testVerifyInvaldPassword()
    {
        $user = new \PHPCI\Model\User;
        $password = 'foo';
        $user->setHash(password_hash($password, PASSWORD_DEFAULT));

        $this->assertFalse($this->provider->verifyPassword($user, 'bar'));
    }

    /**
     * @covers PHPCI\Security\Authentication\UserProvider\Internal::checkRequirements
     */
    public function testCheckRequirements()
    {
        $this->provider->checkRequirements();
    }

    /**
     * @covers PHPCI\Security\Authentication\UserProvider\Internal::provisionUser
     */
    public function testProvisionUser()
    {
        $this->assertNull($this->provider->provisionUser('john@doe.com'));
    }
}
